Traceback (most recent call last):
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jwj2/opt/anaconda3/envs/linalg/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
:tags: [hide-input]

import matplotlib.pyplot as plt
import numpy as np

# Define the vector components
vector = np.array([3, 2])  # Example vector (3, 2)

# Create figure with two subplots
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))

# Plot 1: Vector in standard position (starting from origin)
ax1.quiver(0, 0, vector[0], vector[1], angles='xy', scale_units='xy', scale=1, 
           color='red', width=0.005, headwidth=3, headlength=4)
ax1.set_xlim(-1, 4)
ax1.set_ylim(-1, 3)
ax1.set_aspect('equal')
ax1.grid(True, alpha=0.3)
ax1.set_xlabel('X')
ax1.set_ylabel('Y')
ax1.set_title('Vector in Standard Position')

# Add vector label
ax1.annotate(f'v = ({vector[0]}, {vector[1]})', 
             xy=(vector[0]/2, vector[1]/2), 
             xytext=(vector[0]/2 + 0.5, vector[1]/2 + 0.5),
             fontsize=12, color='red', weight='bold')

# Add origin point
ax1.plot(0, 0, 'ko', markersize=6)
ax1.annotate('Origin (0,0)', xy=(0, 0), xytext=(0.2, -0.3), fontsize=10)

# Plot 2: Same vector in different positions
positions = [
    np.array([0, 0]),    # Standard position
    np.array([1, 1]),    # Translated position 1
    np.array([-1, 2]),   # Translated position 2
    np.array([2, -1]),   # Translated position 3
    np.array([-2, -1])   # Translated position 4
]

colors = ['red', 'blue', 'green', 'orange', 'purple']
labels = ['Standard', 'Position 1', 'Position 2', 'Position 3', 'Position 4']

for i, (pos, color, label) in enumerate(zip(positions, colors, labels)):
    ax2.quiver(pos[0], pos[1], vector[0], vector[1], 
               angles='xy', scale_units='xy', scale=1,
               color=color, width=0.004, headwidth=3, headlength=4,
               label=label)
    
    # Mark starting points
    ax2.plot(pos[0], pos[1], 'o', color=color, markersize=4)
    
    # Add position labels
    if i > 0:  # Skip labeling the origin
        ax2.annotate(f'({pos[0]}, {pos[1]})', 
                     xy=(pos[0], pos[1]), 
                     xytext=(pos[0] + 0.3, pos[1] + 0.3),
                     fontsize=8, color=color)

ax2.set_xlim(-4, 6)
ax2.set_ylim(-3, 5)
ax2.set_aspect('equal')
ax2.grid(True, alpha=0.3)
ax2.set_xlabel('X')
ax2.set_ylabel('Y')
ax2.set_title('Same Vector in Different Positions')
ax2.legend(loc='upper right', fontsize=9)

# Add text explaining the concept
fig.suptitle(f'Vector v = ({vector[0]}, {vector[1]}) - Same Direction and Magnitude', 
             fontsize=14, weight='bold')

plt.tight_layout()
plt.show()
------------------


[0;36m  Cell [0;32mIn[1], line 1[0;36m[0m
[0;31m    :tags: [hide-input][0m
[0m    ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax


